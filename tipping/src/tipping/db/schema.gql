type Match {
  startDateTime: Time!
  season: Int!
  roundNumber: Int!
  venue: String!
  winner: Team
  margin: Int
  teamMatches: [TeamMatch!] @relation
  predictons: [Prediction] @relation
}

type Team {
  name: String! @unique
}

type TeamMatch {
  team: Team!
  match: Match!
  atHome: Boolean!
  score: Int!
}

type Prediction {
  match: Match!
  mlModel: MLModel!
  predictedWinner: Team!
  predictedMargin: Float
  predictedWinProbability: Float
  wasCorrect: Boolean
}

type MLModel {
  name: String! @unique
  isPrincipal: Boolean!
  usedInCompetitions: Boolean!
  predictionType: String!
  predictions: [Prediction] @relation
}

type Query {
  allMatches: [Match!]
  allMLModels: [MLModel!]
  allTeams: [Team!]
  allTeamMatches: [TeamMatch!]
  allPredictions: [Prediction!]
  filterMatchesBySeason(season: Int): [Match!]
  filterMLModelsBy(usedInCompetitions: Boolean): [MLModel!]
  findTeamByName(name: String!): Team
  findMLModelBy(isPrincipal: Boolean): MLModel
}
